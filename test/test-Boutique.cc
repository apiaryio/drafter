#include "draftertest.h"

using namespace draftertest;

TEST_REFRACT("boutique", "array-fixed-inline-samples");
TEST_REFRACT("boutique", "array-fixed-samples");
TEST_REFRACT("boutique", "array-fixed-samples-complex");
TEST_REFRACT("boutique", "array-fixed-inline");
TEST_REFRACT("boutique", "array-fixed-types-only");
TEST_REFRACT("boutique", "array-of-arrays");
TEST_REFRACT("boutique", "array-fixed");
TEST_REFRACT("boutique", "array-inline");
TEST_REFRACT("boutique", "array-of-types-mixed-complex");
TEST_REFRACT("boutique", "array-of-types-only");
TEST_REFRACT("boutique", "array-of-types");
TEST_REFRACT("boutique", "array-of-types-mixed");
TEST_REFRACT("boutique", "array-restricted-to-type");
TEST_REFRACT("boutique", "array-simple");
TEST_REFRACT("boutique", "array-restricted-to-types-complex");
TEST_REFRACT("boutique", "array-restricted-to-types");
TEST_REFRACT("boutique", "array-with-nested-types");
TEST_REFRACT("boutique", "array-with-nested-type");
TEST_REFRACT("boutique", "boolean");
TEST_REFRACT("boutique", "boolean-literal");
TEST_REFRACT("boutique", "default-attribute");
TEST_REFRACT("boutique", "default-sample");
TEST_REFRACT("boutique", "description");
TEST_REFRACT("boutique", "default-section");
TEST_REFRACT("boutique", "enum-containing-object");
TEST_REFRACT("boutique", "enum-containing-sample");
TEST_REFRACT("boutique", "enum-containing-enum");
TEST_REFRACT("boutique", "enum-of-strings");
TEST_REFRACT("boutique", "number-literal");
TEST_REFRACT("boutique", "enum-with-type");
TEST_REFRACT("boutique", "number");
TEST_REFRACT("boutique", "escaping");
TEST_REFRACT("boutique", "object-complex");
TEST_REFRACT("boutique", "object-fixed");
TEST_REFRACT("boutique", "object-fixed-values");
TEST_REFRACT("boutique", "object-fixed-optional");
TEST_REFRACT("boutique", "object-simple");
TEST_REFRACT("boutique", "object-very-complex");
TEST_REFRACT("boutique", "one-of-complex");
TEST_REFRACT("boutique", "one-of-properties");
TEST_REFRACT("boutique", "one-of");
TEST_REFRACT("boutique", "optional");
TEST_REFRACT("boutique", "required-object");
TEST_REFRACT("boutique", "required-array");
TEST_REFRACT("boutique", "sample-complex");
TEST_REFRACT("boutique", "sample-inline-attribute");
TEST_REFRACT("boutique", "required");
TEST_REFRACT("boutique", "sample-inline-variable");
TEST_REFRACT("boutique", "variable-property");
TEST_REFRACT("boutique", "sample");
TEST_REFRACT("boutique", "string-literal");
TEST_REFRACT("boutique", "string");
