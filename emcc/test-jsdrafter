#!/usr/bin/env node

var assert = require('chai').assert;
var fs = require('fs');
var path = require('path');
var jsdrafter = require('./jsdrafter.js');

var fixtures = '../test/fixtures/';

var testRun = {total:0, pass:0, fail:0};

var apibs = [];
fs.readdirSync(fixtures).forEach(function(file) {
    if (path.extname(file) === ".apib") {
        var p = path.basename(file, '.apib');
        try {
            if (fs.statSync(path.join(fixtures, p+".result.json")).isFile()) {
                apibs.push({apib:path.join(fixtures,file),
                            result:path.join(fixtures, p+".result.json")});
                testRun.total++;
            } else {
                console.error("Found "+path.join(fixtures,file)+" but not result!");
            }
        } catch (err) {
            assert.fail(true, false, err);
        }
    }
});

apibs.forEach(function(t) {
    var data = fs.readFileSync(t.apib, 'utf8');
    var expect = JSON.parse(fs.readFileSync(t.result, 'utf8'));
    var drafterRes = jsdrafter.parseAPIBlueprint(data);

    try {
        assert.equal(drafterRes.err, 0, "Parse "+t.apib);
        var res = JSON.parse(drafterRes.result);
        assert.deepEqual(res, expect, "Parsed correctly as expected");
        console.log("OK "+t.apib);
        testRun.pass++;
    } catch (err) {
        console.log("FAIL "+t.apib);
        console.log(err);
        testRun.fail++;
    }
});

console.log("\nTest run result:\n================");
console.log("Total:  "+testRun.total);
console.log("Passed: "+testRun.pass);
console.log("Failed: "+testRun.fail);

if (testRun.fail > 0) return -1;

return 0;
